---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ include "safe-transaction-service.fullname" . }}-web

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "safe-transaction-service.fullname" . }}-web
  template:
    metadata:
      labels:
        app: {{ include "safe-transaction-service.fullname" . }}-web
    spec:

      initContainers:
        {{- if .Values.config.database.runMigration  }}
        - name: init-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - python manage.py migrate --no-input
          env:
            - name: ETHEREUM_NODE_URL
              {{- if .Values.config.node.useGanacheNode }}
              value: "http://{{ include "safe-transaction-service.fullname" . }}-ganache-node:8545"
              {{- else }}
              value: {{ .Values.config.node.url }}
              {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "safe-transaction-service.fullname" . }}-env
        {{- end }}

        {{- if .Values.config.admin.auth.enabled  }}
        - name: init-sudo
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /bin/bash
            - -c
            - python manage.py createsuperuser --no-input || true
          envFrom:
            - configMapRef:
                name: {{ include "safe-transaction-service.fullname" . }}-env
        {{- end }}

      containers:
        - name: web
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "docker/web/run_web.sh" ]
          ports:
            - name: web-ui
              containerPort: 8888
          env:
            - name: ETHEREUM_NODE_URL
              {{- if .Values.config.node.useGanacheNode }}
              value: "http://{{ include "safe-transaction-service.fullname" . }}-ganache-node:8545"
              {{- else }}
              value: {{ .Values.config.node.url }}
              {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "safe-transaction-service.fullname" . }}-env
          livenessProbe:
            httpGet:
              path: /check/
              port: 8888 # Gunicorn uses this port
              httpHeaders:
              - name: X-Forwarded-Proto
                value: 'https'
            initialDelaySeconds: 300 # Just to give more time than Nginx liveness
            periodSeconds: 30
            timeoutSeconds: 5
          volumeMounts:
            - name: gunicorn-volume
              mountPath: /nginx
          {{- with .Values.web.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.web.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /check/
              port: 8000
              httpHeaders:
              - name: X-Forwarded-Proto
                value: 'https'
            initialDelaySeconds: 120 # Web container needs to be woken up
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /check/
              port: 8000
              httpHeaders:
              - name: X-Forwarded-Proto
                value: 'https'
            periodSeconds: 30
            timeoutSeconds: 5

          volumeMounts:
            - name: nginx-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: gunicorn-volume
              mountPath: /nginx

          {{- with .Values.web.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            requests:
              memory: "250Mi"
              cpu: "100m"
            limits:
              memory: "500Mi"
              cpu: "500m"

      volumes:
        - name: gunicorn-volume
          emptyDir: {}
        - name: nginx-volume
          configMap:
            name: {{ include "safe-transaction-service.fullname" . }}-nginx-config

      {{- with .Values.web.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.web.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---