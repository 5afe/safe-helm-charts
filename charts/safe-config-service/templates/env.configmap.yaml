{{- if .Values.cfgService.enabled }}
---
apiVersion: v1
kind: ConfigMap

metadata:
  name: {{ include "safe-config-service.fullname" . }}-env

data:
  ## Common properties
  PYTHONDONTWRITEBYTECODE: "true"
  DJANGO_ALLOWED_HOSTS: "*"
  DEFAULT_FILE_STORAGE: django.core.files.storage.FileSystemStorage
  DOCKER_WEB_VOLUME: ".:/app"
  SECRET_KEY: "{{ .Values.cfgService.config.secretKey }}"
  CSRF_TRUSTED_ORIGINS: {{ .Values.cfgService.config.csrf.trustedOrigins }}
  MEDIA_URL: "https://{{ .Values.cfgService.ingress.host }}/media/"  ## config [TODO] NOT WORKING

  ## Debug mode
  {{- if .Values.cfgService.config.debug  }}
  DEBUG: "true"
  ROOT_LOG_LEVEL: "DEBUG" 
  {{ else }}
  DEBUG: "false"
  ROOT_LOG_LEVEL: "INFO" 
  {{- end }}

  ## Nginx config
  NGINX_ENVSUBST_OUTPUT_DIR: "/etc/nginx/"
  DOCKER_NGINX_VOLUME_ROOT: "/nginx"
  GUNICORN_WEB_RELOAD: "false"
  GUNICORN_BIND_PORT: "8001"
  GUNICORN_BIND_SOCKET: "unix:/nginx/gunicorn.socket"

  ## Database configuration 

  POSTGRES_USER: "{{ .Values.cfgService.config.database.user }}"
  POSTGRES_PASSWORD: "{{ .Values.cfgService.config.database.password }}"
  POSTGRES_NAME: "{{ .Values.cfgService.config.database.db }}"
  POSTGRES_PORT: "{{ .Values.cfgService.config.database.port }}"
  {{- if not .Values.cfgService.config.database.useExisting }}
  POSTGRES_HOST: "{{ include "safe-config-service.fullname" . }}-postgresql"
  {{ else }}
  POSTGRES_HOST: {{ .Values.cfgService.config.database.host }}
  {{- end }}

  ## Admin authentication
  {{- if .Values.cfgService.config.admin.auth.enabled  }}
  DJANGO_SUPERUSER_USERNAME: {{ .Values.cfgService.config.admin.auth.username }}
  DJANGO_SUPERUSER_EMAIL: {{ .Values.cfgService.config.admin.auth.email }}
  DJANGO_SUPERUSER_PASSWORD: {{ .Values.cfgService.config.admin.auth.password }}
  {{- end }}
  DJANGO_OTP_ADMIN: "false"

  ## Client-Gateway authentication
  CGW_URL: {{ .Values.cfgService.config.clientGateway.url }}
  CGW_FLUSH_TOKEN: "{{ .Values.cfgService.config.clientGateway.token  }}"

  ## Extra envs
  {{- if .Values.cfgService.extraEnvVars }}
  {{ .Values.cfgService.extraEnvVars | toYaml | nindent 2 }}
  {{- end }}
---
apiVersion: v1
kind: ConfigMap

metadata:
  name: {{ include "safe-config-service.fullname" . }}-nginx-config

data:
  nginx.conf: |
    # https://github.com/KyleAMathews/docker-nginx/blob/master/nginx.conf
    # https://linode.com/docs/web-servers/nginx/configure-nginx-for-optimized-performance/
    # https://github.com/denji/nginx-tuning
    worker_processes auto;

    ### Non-root: To run nginx as non-root
    # Reason:
    # - https://github.com/nginxinc/docker-nginx-unprivileged#common-issues
    # - https://github.com/docker-library/docs/tree/master/nginx#running-nginx-as-a-non-root-user
    pid /tmp/nginx.pid;
    ###

    events {
      worker_connections 10000;  # increase if you have lots of clients
      # accept_mutex on;  # set to 'on' if nginx worker_processes > 1
      use epoll;  # to enable for Linux 2.6+
    }

    http {
      ### Non-root: To run nginx as non-root
      # Reason:
      # - https://github.com/nginxinc/docker-nginx-unprivileged#common-issues
      # - https://github.com/docker-library/docs/tree/master/nginx#running-nginx-as-a-non-root-user
      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;
      ###

      include mime.types;
      # fallback in case we can't determine a type
      default_type application/octet-stream;
      sendfile on;

      upstream app_server {
        ip_hash;  # For load-balancing
        # server web:${GUNICORN_BIND_PORT} fail_timeout=0;
        #
        # fail_timeout=0 means we always retry an upstream even if it failed
        # to return a good HTTP response
        server unix:/nginx/gunicorn.socket fail_timeout=0;
        keepalive 32;
      }

      server {
        access_log off;
        listen 8000;
        charset utf-8;

        keepalive_timeout 75s;
        keepalive_requests 100000;
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;

        gzip             on;
        gzip_min_length 10000;
        gzip_comp_level  6;

        # text/html is always included by default
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/javascript text/xml application/xml application/rss+xml application/atom+xml application/rdf+xml;
        gzip_disable "MSIE [1-6]\.";

        # allow the server to close connection on non responding client, this will free up memory
        reset_timedout_connection on;

        # Redirect http to https
        if ($http_x_forwarded_proto = 'http') {
          return 301 https://$host$request_uri;
        }

        location /static {
          alias /nginx/staticfiles;
          expires 365d;
        }

        location /media  {
          alias /app/src/media;                                                                                    
        }

        location / {
              proxy_pass http://app_server/;
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-Host $server_name;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header        X-Forwarded-Proto $http_x_forwarded_proto;
              add_header              Front-End-Https   on;
              # we don't want nginx trying to do something clever with
              # redirects, we set the Host: header above already.
              proxy_redirect off;
              # They default to 60s. Increase to avoid WORKER TIMEOUT in web container
              proxy_connect_timeout 60s;
              proxy_read_timeout 60s;
        }
      }
    }
---
{{- end }}